[package]
name = "embedded-rust-tutorial-validation"
version = "0.1.0"
edition = "2021"

[dependencies]
# Core dependencies for validation framework
regex = "1.0"
tempfile = "3.0"
num_cpus = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
chrono = { version = "0.4", features = ["serde"] }

# Embedded dependencies for Cortex-R5 (minimal set - no heap, no_std only)
# These are only used when building with embedded features
cortex-r-rt = { version = "0.1", optional = true }
heapless = { version = "0.8", default-features = false, optional = true }
panic-halt = { version = "0.2", optional = true }

# Additional embedded utilities
nb = { version = "1.1", optional = true }
embedded-hal = { version = "1.0", optional = true }

# Optional crypto dependencies (no_std compatible, no heap)
zeroize = { version = "1.7", default-features = false, features = ["derive"], optional = true }
subtle = { version = "2.5", default-features = false, optional = true }
sha2 = { version = "0.10", default-features = false, optional = true }
aes = { version = "0.8", default-features = false, optional = true }
cipher = { version = "0.4", default-features = false, optional = true }
aes-gcm = { version = "0.10", default-features = false, features = ["heapless"], optional = true }
chacha20poly1305 = { version = "0.10", default-features = false, features = ["heapless"], optional = true }
der = { version = "0.7", default-features = false, optional = true }
x509-cert = { version = "0.2", default-features = false, optional = true }
const-oid = { version = "0.9", default-features = false, optional = true }
hkdf = { version = "0.12", default-features = false, optional = true }
pbkdf2 = { version = "0.12", default-features = false, features = ["simple"], optional = true }
hmac = { version = "0.12", default-features = false, optional = true }

[dev-dependencies]
rand = "0.8"

[features]
default = ["std"]
std = []
# Core embedded features for Cortex-R5
embedded = ["cortex-r-rt", "heapless", "panic-halt", "nb", "embedded-hal"]
# Basic crypto features for symmetric operations
crypto-basic = ["zeroize", "subtle", "sha2", "aes", "cipher"]
# Advanced crypto features for certificates and key derivation
crypto-advanced = ["crypto-basic", "der", "x509-cert", "const-oid", "hkdf", "pbkdf2", "hmac", "aes-gcm", "chacha20poly1305"]
# All crypto features combined
crypto = ["crypto-advanced"]
# Hardware abstraction layer support
hardware = ["cortex-r-rt", "embedded-hal", "nb"]
# Full feature set for comprehensive Cortex-R5 examples
full-embedded = ["embedded", "crypto", "hardware"]
# Individual crypto components for fine-grained control
crypto-hash = ["sha2"]
crypto-symmetric = ["aes", "zeroize"]
crypto-x509 = ["der", "x509-cert", "const-oid"]
crypto-kdf = ["hkdf", "pbkdf2", "hmac"]

[profile.dev]
debug = true
opt-level = "s"

[profile.release]
debug = true
opt-level = "s"
lto = true
codegen-units = 1

[[bin]]
name = "validate_new_content"
path = "validate_new_content.rs"

[[bin]]
name = "test_math_safety"
path = "test_math_safety.rs"

[[bin]]
name = "rust_example_tester"
path = "src/bin/rust_example_tester.rs"

[[bin]]
name = "mdbook-rust-examples"
path = "src/bin/mdbook-rust-examples.rs"

[[bin]]
name = "dev_tools"
path = "src/bin/dev_tools.rs"

[[bin]]
name = "security_validator_cli"
path = "src/bin/security_validator_cli.rs"

[[bin]]
name = "final_integration_validator"
path = "src/bin/final_integration_validator.rs"

[[bin]]
name = "test_cortex_r5_examples"
path = "test_cortex_r5_examples.rs"

[[bin]]
name = "cortex_r5_example"
path = "src/bin/cortex_r5_example.rs"